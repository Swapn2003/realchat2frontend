{"ast":null,"code":"var _jsxFileName = \"D:\\\\IIT Guwahati\\\\cpp\\\\New folder\\\\helloworld\\\\WEB_D\\\\Project6_Depoloyment_try_real_chat26.06.2023\\\\New folder\\\\front\\\\src\\\\Components\\\\Leftpane.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport Contacts from './Contacts';\nimport Addgroup from './Addgroup';\nimport userContext from '../context/users/userContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leftpane = props => {\n  _s();\n  const User = useContext(userContext);\n  useEffect(() => {\n    const fetchContactList = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/user/contacts/accesscontacts?myId=${props.myId}`);\n        const myContactList = response.data; // Assuming contact list is directly returned in response.data\n        // console.log(\"hello\");\n        const mappedContacts = myContactList.map(contact => {\n          return {\n            contactName: contact.contactName,\n            recipients: contact.recipients,\n            messages: contact.messages\n          };\n        });\n        await User.updatemyContacts(mappedContacts);\n        // console.log(\"User.mycontacts\",User.myContacts);\n        // Update User context or state with the contact list\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchContactList();\n  }, [props.myId, User]);\n  if (User.myContacts === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leftpane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"head_con\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-list\",\n      children: User.myContacts.map(contact => {\n        return /*#__PURE__*/_jsxDEV(Contacts, {\n          contactName: contact.contactName,\n          recipients: contact.recipients\n        }, contact.contactName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this) //thoda check kar lena [0]\n        ;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Addgroup, {\n      myId: props.myId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n_s(Leftpane, \"LocW5WWAhbpYKAb+Zydv4nlNGPs=\");\n_c = Leftpane;\nexport default Leftpane;\nvar _c;\n$RefreshReg$(_c, \"Leftpane\");","map":{"version":3,"names":["React","useContext","useEffect","Contacts","Addgroup","userContext","axios","jsxDEV","_jsxDEV","Leftpane","props","_s","User","fetchContactList","response","get","myId","myContactList","data","mappedContacts","map","contact","contactName","recipients","messages","updatemyContacts","error","console","log","message","myContacts","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/IIT Guwahati/cpp/New folder/helloworld/WEB_D/Project6_Depoloyment_try_real_chat26.06.2023/New folder/front/src/Components/Leftpane.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport Contacts from './Contacts'\r\nimport Addgroup from './Addgroup'\r\nimport userContext from '../context/users/userContext'\r\nimport axios from 'axios'\r\nconst Leftpane = (props) => {\r\n  \r\n  const User = useContext(userContext);\r\n\r\n  useEffect(() => {\r\n    const fetchContactList = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/user/contacts/accesscontacts?myId=${props.myId}`);\r\n        const myContactList = response.data; // Assuming contact list is directly returned in response.data\r\n        // console.log(\"hello\");\r\n        const mappedContacts = myContactList.map((contact) => {\r\n          return {\r\n            contactName: contact.contactName,\r\n            recipients: contact.recipients,\r\n            messages: contact.messages\r\n          };\r\n        });\r\n        await User.updatemyContacts(mappedContacts);\r\n        // console.log(\"User.mycontacts\",User.myContacts);\r\n        // Update User context or state with the contact list\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n    \r\n    fetchContactList();\r\n  }, [props.myId,User]);\r\n  if(User.myContacts===undefined){\r\n    return null;\r\n  }\r\n  return (\r\n  \r\n      <div className=\"leftpane\">\r\n        <div className=\"head_con\">\r\n        <h4>Contacts</h4>\r\n        </div>\r\n        <div className=\"contact-list\">\r\n          {User.myContacts.map((contact)=>{\r\n            return(\r\n              <Contacts contactName={contact.contactName} recipients={contact.recipients} key={contact.contactName}/> //thoda check kar lena [0]\r\n            )\r\n          })}\r\n        </div>\r\n\r\n        <Addgroup myId={props.myId}/>\r\n\r\n      </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default Leftpane\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE1B,MAAMC,IAAI,GAAGX,UAAU,CAACI,WAAW,CAAC;EAEpCH,SAAS,CAAC,MAAM;IACd,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,+DAA8DL,KAAK,CAACM,IAAK,EAAC,CAAC;QAC7G,MAAMC,aAAa,GAAGH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACrC;QACA,MAAMC,cAAc,GAAGF,aAAa,CAACG,GAAG,CAAEC,OAAO,IAAK;UACpD,OAAO;YACLC,WAAW,EAAED,OAAO,CAACC,WAAW;YAChCC,UAAU,EAAEF,OAAO,CAACE,UAAU;YAC9BC,QAAQ,EAAEH,OAAO,CAACG;UACpB,CAAC;QACH,CAAC,CAAC;QACF,MAAMZ,IAAI,CAACa,gBAAgB,CAACN,cAAc,CAAC;QAC3C;QACA;MACF,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;MAC5B;IACF,CAAC;IAEDhB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACH,KAAK,CAACM,IAAI,EAACJ,IAAI,CAAC,CAAC;EACrB,IAAGA,IAAI,CAACkB,UAAU,KAAGC,SAAS,EAAC;IAC7B,OAAO,IAAI;EACb;EACA,oBAEIvB,OAAA;IAAKwB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBzB,OAAA;MAAKwB,SAAS,EAAC,UAAU;MAAAC,QAAA,eACzBzB,OAAA;QAAAyB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACN7B,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BrB,IAAI,CAACkB,UAAU,CAACV,GAAG,CAAEC,OAAO,IAAG;QAC9B,oBACEb,OAAA,CAACL,QAAQ;UAACmB,WAAW,EAAED,OAAO,CAACC,WAAY;UAACC,UAAU,EAAEF,OAAO,CAACE;QAAW,GAAMF,OAAO,CAACC,WAAW;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,CAAC;QAAA;MAE5G,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN7B,OAAA,CAACJ,QAAQ;MAACY,IAAI,EAAEN,KAAK,CAACM;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1B,CAAC;AAGZ,CAAC;AAAA1B,EAAA,CAjDKF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAmDd,eAAeA,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}