{"ast":null,"code":"import _regeneratorRuntime from\"D:/IIT Guwahati/cpp/New folder/helloworld/WEB_D/Project6_Depoloyment_try_real_chat26.06.2023/New folder/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/IIT Guwahati/cpp/New folder/helloworld/WEB_D/Project6_Depoloyment_try_real_chat26.06.2023/New folder/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/IIT Guwahati/cpp/New folder/helloworld/WEB_D/Project6_Depoloyment_try_real_chat26.06.2023/New folder/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import sendIcon from'../img/send.png';import{useContext,useEffect}from'react';// import userContext from '../context/message/userContext';\nimport userContext from\"../context/users/userContext\";import{useSocket}from'../context/SocketProvider';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Chatbox=function Chatbox(props){// const message = useContext(currentMessageContext);\nvar User=useContext(userContext);var socket=useSocket();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),messageTyped=_useState2[0],setmessageTyped=_useState2[1];var handleOnChange=function handleOnChange(event){setmessageTyped(event.target.value);};var _useState3=useState([User.currentUser.recipients]),_useState4=_slicedToArray(_useState3,2),recipients=_useState4[0],setrecipients=_useState4[1];useEffect(function(){setrecipients([User.currentUser.recipients]);},[User.currentUser.id]);// console.log(User.currentUser.id); // Log the updated value of recipients\nvar myId=props.myId;useEffect(function(){if(socket){socket.on('receive-message',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref){var recipients,sender,text,contactName,isGroupChat,config,response,pws;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:recipients=_ref.recipients,sender=_ref.sender,text=_ref.text,contactName=_ref.contactName,isGroupChat=_ref.isGroupChat;console.log(text,sender);_context.prev=2;config={headers:{\"Content-type\":\"application/json\"}};_context.next=6;return axios.get(\"http://localhost:5000/api/user/contacts/getName?myId=\".concat(props.myId,\"&senderId=\").concat(sender));case 6:response=_context.sent;console.log(response.data);_context.next=10;return axios.put(\"http://localhost:5000/api/user/message/addMessage\",{myId:props.myId,contactName:response.data,message:{\"sender\":sender,\"content\":text}},config);case 10:pws=_context.sent;setmessageTyped(\"\");console.log(\"helloworld\");// props.setmyId(username);\n//   localStorage.setItem(\"userInfo\",JSON.stringify(data));\n_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](2);console.log(_context.t0.message);case 18:case\"end\":return _context.stop();}},_callee,null,[[2,15]]);}));return function(_x){return _ref2.apply(this,arguments);};}());return function(){socket.off('receive-message');};}},[User,socket]);var onSendingMessage=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event){var config;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:event.preventDefault();// await User.updateMessage(messageTyped);\n_context2.prev=1;config={headers:{\"Content-type\":\"application/json\"}};_context2.next=5;return socket.emit(\"send-message\",{recipients:recipients,text:messageTyped,contactName:User.currentUser.contactName});case 5:_context2.next=7;return axios.put(\"http://localhost:5000/api/user/message/addMessage\",{myId:props.myId,contactName:User.currentUser.contactName,isGroupChat:User.currentUser.isGroupChat,message:{\"sender\":myId,\"content\":messageTyped}},config);case 7:setmessageTyped(\"\");// console.log(response);\n// props.setmyId(username);\n//   localStorage.setItem(\"userInfo\",JSON.stringify(data));\n_context2.next=13;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](1);console.log(_context2.t0.message);case 13:console.log(\"see here chatbox::\",User.currentUser);// console.log(\"Hello\"); // Log the updated value of recipients\n// event.preventDefault();\ncase 14:case\"end\":return _context2.stop();}},_callee2,null,[[1,10]]);}));return function onSendingMessage(_x2){return _ref3.apply(this,arguments);};}();// useEffect(() => {\n//   if(User.Message.length>1){\n//     console.log(User.Message);\n//   }\n// }, [User.Message]);\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{className:\"chatbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type here\",value:messageTyped,onChange:handleOnChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-icon\",onClick:onSendingMessage,children:/*#__PURE__*/_jsx(\"img\",{src:sendIcon,alt:\"Send\"})})]})});};export default Chatbox;","map":{"version":3,"names":["React","useState","sendIcon","useContext","useEffect","userContext","useSocket","axios","jsx","_jsx","jsxs","_jsxs","Chatbox","props","User","socket","_useState","_useState2","_slicedToArray","messageTyped","setmessageTyped","handleOnChange","event","target","value","_useState3","currentUser","recipients","_useState4","setrecipients","id","myId","on","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","sender","text","contactName","isGroupChat","config","response","pws","wrap","_callee$","_context","prev","next","console","log","headers","get","concat","sent","data","put","message","t0","stop","_x","apply","arguments","off","onSendingMessage","_ref3","_callee2","_callee2$","_context2","preventDefault","emit","_x2","children","className","type","placeholder","onChange","onClick","src","alt"],"sources":["D:/IIT Guwahati/cpp/New folder/helloworld/WEB_D/Project6_Depoloyment_try_real_chat26.06.2023/New folder/frontend/src/Components/Chatbox.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport sendIcon from '../img/send.png';\r\nimport { useContext , useEffect} from 'react';\r\n// import userContext from '../context/message/userContext';\r\nimport userContext from \"../context/users/userContext\";\r\nimport { useSocket } from '../context/SocketProvider';\r\nimport axios from 'axios';\r\nconst Chatbox = (props) => {\r\n  // const message = useContext(currentMessageContext);\r\n  const User=useContext(userContext);\r\n  const socket = useSocket();\r\n  const [messageTyped,setmessageTyped]=useState(\"\");\r\n  \r\n  const handleOnChange=(event)=>{\r\n    setmessageTyped(event.target.value);\r\n  }\r\n  const [recipients,setrecipients] =useState([User.currentUser.recipients]);\r\n  useEffect(()=>{\r\n    setrecipients([User.currentUser.recipients]);\r\n  },[User.currentUser.id])\r\n  // console.log(User.currentUser.id); // Log the updated value of recipients\r\n  const myId=props.myId;\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('receive-message', async({ recipients, sender, text ,contactName,isGroupChat}) => {\r\n        console.log(text,sender);\r\n        try{\r\n          const config ={\r\n            headers: {\r\n              \"Content-type\":\"application/json\",\r\n            }\r\n          };\r\n          const response =await axios.get(`http://localhost:5000/api/user/contacts/getName?myId=${props.myId}&senderId=${sender}`)\r\n          console.log(response.data);\r\n          const pws=await axios.put(\"http://localhost:5000/api/user/message/addMessage\",{myId:props.myId,contactName:response.data,message:{\"sender\":sender,\"content\":text}},config)\r\n          setmessageTyped(\"\");\r\n          console.log(\"helloworld\");\r\n          // props.setmyId(username);\r\n          //   localStorage.setItem(\"userInfo\",JSON.stringify(data));\r\n        }catch(error){\r\n          console.log(error.message);\r\n        }\r\n        // User.addMessageToContact({'text':text,id:[sender],'sender':sender});\r\n      });\r\n      \r\n      return () => {\r\n        socket.off('receive-message');\r\n      };\r\n    }\r\n  }, [User,socket]);\r\n  const onSendingMessage = async (event) => {\r\n    event.preventDefault();\r\n    // await User.updateMessage(messageTyped);\r\n    try{\r\n      const config ={\r\n        headers: {\r\n          \"Content-type\":\"application/json\",\r\n        }\r\n      };\r\n      await socket.emit(\"send-message\", { recipients, text: messageTyped,contactName:User.currentUser.contactName});\r\n      // await User.addMessageToContact({text:messageTyped,id:recipients,'sender':props.myId});\r\n      await axios.put(\"http://localhost:5000/api/user/message/addMessage\",{myId:props.myId,contactName:User.currentUser.contactName,isGroupChat:User.currentUser.isGroupChat,message:{\"sender\":myId,\"content\":messageTyped}},config)\r\n      setmessageTyped(\"\");\r\n      // console.log(response);\r\n      // props.setmyId(username);\r\n      //   localStorage.setItem(\"userInfo\",JSON.stringify(data));\r\n    }catch(error){\r\n      console.log(error.message);\r\n    }\r\n    console.log(\"see here chatbox::\",User.currentUser)\r\n    \r\n    // console.log(\"Hello\"); // Log the updated value of recipients\r\n    // event.preventDefault();\r\n  \r\n  };\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if(User.Message.length>1){\r\n  //     console.log(User.Message);\r\n  //   }\r\n  // }, [User.Message]);\r\n  return (\r\n    <div>\r\n      \r\n        <form className=\"chatbox\" >\r\n          <input type=\"text\" placeholder='Type here' value={messageTyped} onChange={handleOnChange}/>\r\n          <button type='submit' className=\"send-icon\" onClick={onSendingMessage}>\r\n            <img src={sendIcon} alt=\"Send\" />\r\n          </button>\r\n        </form>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}