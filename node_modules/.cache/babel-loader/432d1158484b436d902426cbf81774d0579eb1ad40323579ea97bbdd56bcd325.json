{"ast":null,"code":"var _jsxFileName = \"D:\\\\IIT Guwahati\\\\cpp\\\\New folder\\\\helloworld\\\\WEB_D\\\\Real_time_chat\\\\real\\\\frontend\\\\src\\\\Components\\\\Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport sendIcon from '../img/send.png';\nimport { useContext, useEffect } from 'react';\n// import userContext from '../context/message/userContext';\nimport userContext from \"../context/users/userContext\";\nimport { useSocket } from '../context/SocketProvider';\nimport axios from 'axios';\nimport EmojiInput from 'react-input-emoji';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbox = props => {\n  _s();\n  // const message = useContext(currentMessageContext);\n  const User = useContext(userContext);\n  const socket = useSocket();\n  const [messageTyped, setmessageTyped] = useState(\"\");\n  const [file, setFile] = useState();\n  const [locn, setlocn] = useState();\n  const selectFile = async e => {\n    setmessageTyped(e.target.files[0].name);\n    setFile(e.target.files[0]);\n  };\n  const handleOnChange = event => {\n    setmessageTyped(event);\n  };\n  const [recipients, setrecipients] = useState([User.currentUser.recipients]);\n  useEffect(() => {\n    setrecipients([User.currentUser.recipients]);\n  }, [User.currentUser.id]);\n  // console.log(User.currentUser.id); // Log the updated value of recipients\n  const myId = props.myId;\n  useEffect(() => {\n    if (socket) {\n      socket.on('receive-message', async _ref => {\n        let {\n          recipients,\n          sender,\n          text,\n          contactName,\n          isGroupChat,\n          type,\n          body\n        } = _ref;\n        console.log(text, sender, recipients, contactName, isGroupChat, type, body);\n        if (type === 'file') {\n          try {\n            const config = {\n              headers: {\n                \"Content-type\": \"multipart/form-data\"\n              }\n            };\n            if (!isGroupChat) {\n              var response = await axios.get(`http://localhost:5000/api/user/contacts/getName?myId=${props.myId}&senderId=${sender}`);\n            }\n            const formData = new FormData();\n            formData.append('myId', props.myId);\n            formData.append('contactName', `${isGroupChat ? contactName : response.data}`);\n            formData.append('message_sender', sender);\n            formData.append('message_content', text);\n            formData.append('body', file);\n            await axios.put(\"http://localhost:5000/api/user/message/addFile\", formData, config);\n            setmessageTyped(\"\");\n            setFile();\n          } catch (error) {\n            console.log(error.message);\n          }\n        } else {\n          try {\n            const config = {\n              headers: {\n                \"Content-type\": \"application/json\"\n              }\n            };\n            console.log(\"isgroupchat::\", isGroupChat);\n            if (!isGroupChat) {\n              var response = await axios.get(`http://localhost:5000/api/user/contacts/getName?myId=${props.myId}&senderId=${sender}`);\n            }\n            const pws = await axios.put(\"http://localhost:5000/api/user/message/addMessage\", {\n              myId: props.myId,\n              contactName: `${isGroupChat ? contactName : response.data}`,\n              message: {\n                \"sender\": sender,\n                \"content\": text,\n                \"type\": type,\n                \"body\": body\n              }\n            }, config);\n            setmessageTyped(\"\");\n            console.log(\"helloworld\");\n            // props.setmyId(username);\n            //   localStorage.setItem(\"userInfo\",JSON.stringify(data));\n          } catch (error) {\n            console.log(error.message);\n          }\n        }\n        // User.addMessageToContact({'text':text,id:[sender],'sender':sender});\n      });\n\n      return () => {\n        socket.off('receive-message');\n      };\n    }\n  }, [User, socket]);\n  const onSendingMessage = async event => {\n    event.preventDefault();\n    // await User.updateMessage(messageTyped);\n\n    if (file) {\n      console.log('file', file, 71);\n      const messageObject = {\n        recipients,\n        text: messageTyped,\n        contactName: User.currentUser.contactName,\n        isGroupChat: User.currentUser.isGroupChat,\n        type: \"file\",\n        body: file,\n        mimeType: file.type,\n        fileName: file.name\n      };\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"multipart/form-data\"\n          }\n        };\n        await socket.emit(\"send-message\", messageObject);\n        const formData = new FormData();\n        formData.append('myId', props.myId);\n        formData.append('contactName', User.currentUser.contactName);\n        formData.append('message_sender', myId);\n        formData.append('message_content', messageTyped);\n        formData.append('body', file);\n        await axios.put(\"http://localhost:5000/api/user/message/addFile\", formData, config);\n        setmessageTyped(\"\");\n        setFile();\n      } catch (error) {\n        console.log(error.message);\n      }\n    } else {\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        };\n        await socket.emit(\"send-message\", {\n          recipients,\n          text: messageTyped,\n          contactName: User.currentUser.contactName,\n          isGroupChat: User.currentUser.isGroupChat,\n          type: \"text\",\n          body: \"\"\n        });\n        // await User.addMessageToContact({text:messageTyped,id:recipients,'sender':props.myId});\n        await axios.put(\"http://localhost:5000/api/user/message/addMessage\", {\n          myId: props.myId,\n          contactName: User.currentUser.contactName,\n          message: {\n            \"sender\": myId,\n            \"content\": messageTyped,\n            type: \"text\",\n            body: \"\"\n          }\n        }, config);\n        setmessageTyped(\"\");\n        // console.log(response);\n        // props.setmyId(username);\n        //   localStorage.setItem(\"userInfo\",JSON.stringify(data));\n      } catch (error) {\n        console.log(error.message);\n      }\n      console.log(\"see here chatbox::\", User.currentUser);\n\n      // console.log(\"Hello\"); // Log the updated value of recipients\n      // event.preventDefault();\n    }\n  };\n\n  // useEffect(() => {\n  //   if(User.Message.length>1){\n  //     console.log(User.Message);\n  //   }\n  // }, [User.Message]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: selectFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EmojiInput, {\n        value: messageTyped,\n        onChange: handleOnChange,\n        placeholder: \"Type here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-icon\",\n        onClick: onSendingMessage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: sendIcon,\n          alt: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbox, \"ytsr/pT4xHbyJNfSO657dZFTKF0=\", false, function () {\n  return [useSocket];\n});\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","sendIcon","useContext","useEffect","userContext","useSocket","axios","EmojiInput","jsxDEV","_jsxDEV","Chatbox","props","_s","User","socket","messageTyped","setmessageTyped","file","setFile","locn","setlocn","selectFile","e","target","files","name","handleOnChange","event","recipients","setrecipients","currentUser","id","myId","on","_ref","sender","text","contactName","isGroupChat","type","body","console","log","config","headers","response","get","formData","FormData","append","data","put","error","message","pws","off","onSendingMessage","preventDefault","messageObject","mimeType","fileName","emit","children","className","onChange","_jsxFileName","lineNumber","columnNumber","value","placeholder","onClick","src","alt","_c","$RefreshReg$"],"sources":["D:/IIT Guwahati/cpp/New folder/helloworld/WEB_D/Real_time_chat/real/frontend/src/Components/Chatbox.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport sendIcon from '../img/send.png';\r\nimport { useContext , useEffect} from 'react';\r\n// import userContext from '../context/message/userContext';\r\nimport userContext from \"../context/users/userContext\";\r\nimport { useSocket } from '../context/SocketProvider';\r\nimport axios from 'axios';\r\nimport  EmojiInput  from 'react-input-emoji';\r\n\r\nconst Chatbox = (props) => {\r\n  // const message = useContext(currentMessageContext);\r\n  const User=useContext(userContext);\r\n  const socket = useSocket();\r\n  const [messageTyped,setmessageTyped]=useState(\"\");\r\n  const [file,setFile] = useState();\r\n  const [locn,setlocn]= useState();\r\n\r\n  const selectFile =async(e)=>{\r\n    setmessageTyped(e.target.files[0].name);\r\n    setFile(e.target.files[0]);\r\n  }\r\n\r\n  const handleOnChange=(event)=>{\r\n    setmessageTyped(event);\r\n  }\r\n  const [recipients,setrecipients] =useState([User.currentUser.recipients]);\r\n  useEffect(()=>{\r\n    setrecipients([User.currentUser.recipients]);\r\n  },[User.currentUser.id])\r\n  // console.log(User.currentUser.id); // Log the updated value of recipients\r\n  const myId=props.myId;\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('receive-message', async({ recipients, sender, text ,contactName,isGroupChat,type,body}) => {\r\n        console.log(text,sender,recipients,contactName,isGroupChat,type,body);\r\n        if(type==='file'){\r\n          try{\r\n            const config ={\r\n              headers: {\r\n                \"Content-type\":\"multipart/form-data\",\r\n              }\r\n            };\r\n            if(!isGroupChat){\r\n              \r\n              var response =await axios.get(`http://localhost:5000/api/user/contacts/getName?myId=${props.myId}&senderId=${sender}`)\r\n            }\r\n            \r\n            const formData = new FormData();\r\n            formData.append('myId', props.myId);\r\n            formData.append('contactName', `${isGroupChat?contactName:response.data}`);\r\n            formData.append('message_sender',sender);\r\n            formData.append('message_content',text);\r\n            formData.append('body',file);\r\n            await axios.put(\"http://localhost:5000/api/user/message/addFile\",formData,config);\r\n            setmessageTyped(\"\");\r\n            setFile();\r\n            \r\n          }catch(error){\r\n            console.log(error.message);\r\n          }\r\n\r\n\r\n        }else{\r\n\r\n          try{\r\n            const config ={\r\n              headers: {\r\n                \"Content-type\":\"application/json\",\r\n              }\r\n            };\r\n            console.log(\"isgroupchat::\",isGroupChat)\r\n            \r\n            if(!isGroupChat){\r\n              \r\n              var response =await axios.get(`http://localhost:5000/api/user/contacts/getName?myId=${props.myId}&senderId=${sender}`)\r\n            }\r\n            \r\n            \r\n            \r\n            const pws=await axios.put(\"http://localhost:5000/api/user/message/addMessage\",{myId:props.myId,contactName:`${isGroupChat?contactName:response.data}`,message:{\"sender\":sender,\"content\":text,\"type\":type,\"body\":body}},config)\r\n            setmessageTyped(\"\");\r\n            console.log(\"helloworld\");\r\n            // props.setmyId(username);\r\n            //   localStorage.setItem(\"userInfo\",JSON.stringify(data));\r\n          }catch(error){\r\n            console.log(error.message);\r\n          }\r\n        }\r\n        // User.addMessageToContact({'text':text,id:[sender],'sender':sender});\r\n      });\r\n      \r\n      return () => {\r\n        socket.off('receive-message');\r\n      };\r\n    }\r\n  }, [User,socket]);\r\n  const onSendingMessage = async (event) => {\r\n    event.preventDefault();\r\n    // await User.updateMessage(messageTyped);\r\n    \r\n    if(file){\r\n      console.log('file',file,71);\r\n      const messageObject={ \r\n        recipients, \r\n        text: messageTyped,\r\n        contactName:User.currentUser.contactName,\r\n        isGroupChat:User.currentUser.isGroupChat,\r\n        type:\"file\",\r\n        body:file,\r\n        mimeType:file.type,\r\n        fileName:file.name\r\n      }\r\n\r\n      try{\r\n        const config ={\r\n          headers: {\r\n            \"Content-type\":\"multipart/form-data\",\r\n          }\r\n        };\r\n        await socket.emit(\"send-message\", messageObject);\r\n        const formData = new FormData();\r\n        formData.append('myId', props.myId);\r\n        formData.append('contactName', User.currentUser.contactName);\r\n        formData.append('message_sender',myId);\r\n        formData.append('message_content',messageTyped);\r\n        formData.append('body',file);\r\n        await axios.put(\"http://localhost:5000/api/user/message/addFile\",formData,config);\r\n        setmessageTyped(\"\");\r\n        setFile();\r\n        \r\n      }catch(error){\r\n        console.log(error.message);\r\n      }\r\n\r\n    }else{\r\n\r\n      try{\r\n        const config ={\r\n          headers: {\r\n            \"Content-type\":\"application/json\",\r\n          }\r\n        };\r\n        await socket.emit(\"send-message\", { recipients, text: messageTyped,contactName:User.currentUser.contactName,isGroupChat:User.currentUser.isGroupChat,type:\"text\",body:\"\"});\r\n        // await User.addMessageToContact({text:messageTyped,id:recipients,'sender':props.myId});\r\n        await axios.put(\"http://localhost:5000/api/user/message/addMessage\",{myId:props.myId,contactName:User.currentUser.contactName,message:{\"sender\":myId,\"content\":messageTyped,type:\"text\",body:\"\"}},config)\r\n        setmessageTyped(\"\");\r\n        // console.log(response);\r\n        // props.setmyId(username);\r\n        //   localStorage.setItem(\"userInfo\",JSON.stringify(data));\r\n      }catch(error){\r\n        console.log(error.message);\r\n      }\r\n      console.log(\"see here chatbox::\",User.currentUser)\r\n      \r\n      // console.log(\"Hello\"); // Log the updated value of recipients\r\n      // event.preventDefault();\r\n    }\r\n      \r\n    };\r\n    \r\n    \r\n    // useEffect(() => {\r\n      //   if(User.Message.length>1){\r\n  //     console.log(User.Message);\r\n  //   }\r\n  // }, [User.Message]);\r\n  return (\r\n    <div>\r\n      \r\n        <form className=\"chatbox\" >\r\n          {/* <input type=\"text\" placeholder='Type here' value={messageTyped} onChange={handleOnChange}/> */}\r\n          <input type=\"file\" onChange={selectFile} />\r\n          <EmojiInput\r\n          value={messageTyped}\r\n          onChange={handleOnChange}\r\n          placeholder=\"Type here\"\r\n        />\r\n          <button type='submit' className=\"send-icon\" onClick={onSendingMessage}>\r\n            <img src={sendIcon} alt=\"Send\" />\r\n          </button>\r\n        </form>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,SAASC,UAAU,EAAGC,SAAS,QAAO,OAAO;AAC7C;AACA,OAAOC,WAAW,MAAM,8BAA8B;AACtD,SAASC,SAAS,QAAQ,2BAA2B;AACrD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAQC,UAAU,MAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzB;EACA,MAAMC,IAAI,GAACX,UAAU,CAACE,WAAW,CAAC;EAClC,MAAMU,MAAM,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACU,YAAY,EAACC,eAAe,CAAC,GAAChB,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAACiB,IAAI,EAACC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,CAAC;EACjC,MAAM,CAACmB,IAAI,EAACC,OAAO,CAAC,GAAEpB,QAAQ,CAAC,CAAC;EAEhC,MAAMqB,UAAU,GAAE,MAAMC,CAAC,IAAG;IAC1BN,eAAe,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;IACvCP,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAME,cAAc,GAAEC,KAAK,IAAG;IAC5BX,eAAe,CAACW,KAAK,CAAC;EACxB,CAAC;EACD,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAAE7B,QAAQ,CAAC,CAACa,IAAI,CAACiB,WAAW,CAACF,UAAU,CAAC,CAAC;EACzEzB,SAAS,CAAC,MAAI;IACZ0B,aAAa,CAAC,CAAChB,IAAI,CAACiB,WAAW,CAACF,UAAU,CAAC,CAAC;EAC9C,CAAC,EAAC,CAACf,IAAI,CAACiB,WAAW,CAACC,EAAE,CAAC,CAAC;EACxB;EACA,MAAMC,IAAI,GAACrB,KAAK,CAACqB,IAAI;EACrB7B,SAAS,CAAC,MAAM;IACd,IAAIW,MAAM,EAAE;MACVA,MAAM,CAACmB,EAAE,CAAC,iBAAiB,EAAE,MAAAC,IAAA,IAAyE;QAAA,IAAnE;UAAEN,UAAU;UAAEO,MAAM;UAAEC,IAAI;UAAEC,WAAW;UAACC,WAAW;UAACC,IAAI;UAACC;QAAI,CAAC,GAAAN,IAAA;QAC/FO,OAAO,CAACC,GAAG,CAACN,IAAI,EAACD,MAAM,EAACP,UAAU,EAACS,WAAW,EAACC,WAAW,EAACC,IAAI,EAACC,IAAI,CAAC;QACrE,IAAGD,IAAI,KAAG,MAAM,EAAC;UACf,IAAG;YACD,MAAMI,MAAM,GAAE;cACZC,OAAO,EAAE;gBACP,cAAc,EAAC;cACjB;YACF,CAAC;YACD,IAAG,CAACN,WAAW,EAAC;cAEd,IAAIO,QAAQ,GAAE,MAAMvC,KAAK,CAACwC,GAAG,CAAE,wDAAuDnC,KAAK,CAACqB,IAAK,aAAYG,MAAO,EAAC,CAAC;YACxH;YAEA,MAAMY,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;YAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEtC,KAAK,CAACqB,IAAI,CAAC;YACnCe,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAG,GAAEX,WAAW,GAACD,WAAW,GAACQ,QAAQ,CAACK,IAAK,EAAC,CAAC;YAC1EH,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAACd,MAAM,CAAC;YACxCY,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAACb,IAAI,CAAC;YACvCW,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAChC,IAAI,CAAC;YAC5B,MAAMX,KAAK,CAAC6C,GAAG,CAAC,gDAAgD,EAACJ,QAAQ,EAACJ,MAAM,CAAC;YACjF3B,eAAe,CAAC,EAAE,CAAC;YACnBE,OAAO,CAAC,CAAC;UAEX,CAAC,QAAMkC,KAAK,EAAC;YACXX,OAAO,CAACC,GAAG,CAACU,KAAK,CAACC,OAAO,CAAC;UAC5B;QAGF,CAAC,MAAI;UAEH,IAAG;YACD,MAAMV,MAAM,GAAE;cACZC,OAAO,EAAE;gBACP,cAAc,EAAC;cACjB;YACF,CAAC;YACDH,OAAO,CAACC,GAAG,CAAC,eAAe,EAACJ,WAAW,CAAC;YAExC,IAAG,CAACA,WAAW,EAAC;cAEd,IAAIO,QAAQ,GAAE,MAAMvC,KAAK,CAACwC,GAAG,CAAE,wDAAuDnC,KAAK,CAACqB,IAAK,aAAYG,MAAO,EAAC,CAAC;YACxH;YAIA,MAAMmB,GAAG,GAAC,MAAMhD,KAAK,CAAC6C,GAAG,CAAC,mDAAmD,EAAC;cAACnB,IAAI,EAACrB,KAAK,CAACqB,IAAI;cAACK,WAAW,EAAE,GAAEC,WAAW,GAACD,WAAW,GAACQ,QAAQ,CAACK,IAAK,EAAC;cAACG,OAAO,EAAC;gBAAC,QAAQ,EAAClB,MAAM;gBAAC,SAAS,EAACC,IAAI;gBAAC,MAAM,EAACG,IAAI;gBAAC,MAAM,EAACC;cAAI;YAAC,CAAC,EAACG,MAAM,CAAC;YAC/N3B,eAAe,CAAC,EAAE,CAAC;YACnByB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;YACzB;YACA;UACF,CAAC,QAAMU,KAAK,EAAC;YACXX,OAAO,CAACC,GAAG,CAACU,KAAK,CAACC,OAAO,CAAC;UAC5B;QACF;QACA;MACF,CAAC,CAAC;;MAEF,OAAO,MAAM;QACXvC,MAAM,CAACyC,GAAG,CAAC,iBAAiB,CAAC;MAC/B,CAAC;IACH;EACF,CAAC,EAAE,CAAC1C,IAAI,EAACC,MAAM,CAAC,CAAC;EACjB,MAAM0C,gBAAgB,GAAG,MAAO7B,KAAK,IAAK;IACxCA,KAAK,CAAC8B,cAAc,CAAC,CAAC;IACtB;;IAEA,IAAGxC,IAAI,EAAC;MACNwB,OAAO,CAACC,GAAG,CAAC,MAAM,EAACzB,IAAI,EAAC,EAAE,CAAC;MAC3B,MAAMyC,aAAa,GAAC;QAClB9B,UAAU;QACVQ,IAAI,EAAErB,YAAY;QAClBsB,WAAW,EAACxB,IAAI,CAACiB,WAAW,CAACO,WAAW;QACxCC,WAAW,EAACzB,IAAI,CAACiB,WAAW,CAACQ,WAAW;QACxCC,IAAI,EAAC,MAAM;QACXC,IAAI,EAACvB,IAAI;QACT0C,QAAQ,EAAC1C,IAAI,CAACsB,IAAI;QAClBqB,QAAQ,EAAC3C,IAAI,CAACQ;MAChB,CAAC;MAED,IAAG;QACD,MAAMkB,MAAM,GAAE;UACZC,OAAO,EAAE;YACP,cAAc,EAAC;UACjB;QACF,CAAC;QACD,MAAM9B,MAAM,CAAC+C,IAAI,CAAC,cAAc,EAAEH,aAAa,CAAC;QAChD,MAAMX,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEtC,KAAK,CAACqB,IAAI,CAAC;QACnCe,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEpC,IAAI,CAACiB,WAAW,CAACO,WAAW,CAAC;QAC5DU,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAACjB,IAAI,CAAC;QACtCe,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAClC,YAAY,CAAC;QAC/CgC,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAChC,IAAI,CAAC;QAC5B,MAAMX,KAAK,CAAC6C,GAAG,CAAC,gDAAgD,EAACJ,QAAQ,EAACJ,MAAM,CAAC;QACjF3B,eAAe,CAAC,EAAE,CAAC;QACnBE,OAAO,CAAC,CAAC;MAEX,CAAC,QAAMkC,KAAK,EAAC;QACXX,OAAO,CAACC,GAAG,CAACU,KAAK,CAACC,OAAO,CAAC;MAC5B;IAEF,CAAC,MAAI;MAEH,IAAG;QACD,MAAMV,MAAM,GAAE;UACZC,OAAO,EAAE;YACP,cAAc,EAAC;UACjB;QACF,CAAC;QACD,MAAM9B,MAAM,CAAC+C,IAAI,CAAC,cAAc,EAAE;UAAEjC,UAAU;UAAEQ,IAAI,EAAErB,YAAY;UAACsB,WAAW,EAACxB,IAAI,CAACiB,WAAW,CAACO,WAAW;UAACC,WAAW,EAACzB,IAAI,CAACiB,WAAW,CAACQ,WAAW;UAACC,IAAI,EAAC,MAAM;UAACC,IAAI,EAAC;QAAE,CAAC,CAAC;QAC1K;QACA,MAAMlC,KAAK,CAAC6C,GAAG,CAAC,mDAAmD,EAAC;UAACnB,IAAI,EAACrB,KAAK,CAACqB,IAAI;UAACK,WAAW,EAACxB,IAAI,CAACiB,WAAW,CAACO,WAAW;UAACgB,OAAO,EAAC;YAAC,QAAQ,EAACrB,IAAI;YAAC,SAAS,EAACjB,YAAY;YAACwB,IAAI,EAAC,MAAM;YAACC,IAAI,EAAC;UAAE;QAAC,CAAC,EAACG,MAAM,CAAC;QACzM3B,eAAe,CAAC,EAAE,CAAC;QACnB;QACA;QACA;MACF,CAAC,QAAMoC,KAAK,EAAC;QACXX,OAAO,CAACC,GAAG,CAACU,KAAK,CAACC,OAAO,CAAC;MAC5B;MACAZ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAC7B,IAAI,CAACiB,WAAW,CAAC;;MAElD;MACA;IACF;EAEA,CAAC;;EAGD;EACE;EACJ;EACA;EACA;EACA,oBACErB,OAAA;IAAAqD,QAAA,eAEIrD,OAAA;MAAMsD,SAAS,EAAC,SAAS;MAAAD,QAAA,gBAEvBrD,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAACyB,QAAQ,EAAE3C;MAAW;QAAAuC,QAAA,EAAAK,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3C1D,OAAA,CAACF,UAAU;QACX6D,KAAK,EAAErD,YAAa;QACpBiD,QAAQ,EAAEtC,cAAe;QACzB2C,WAAW,EAAC;MAAW;QAAAT,QAAA,EAAAK,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACA1D,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAACwB,SAAS,EAAC,WAAW;QAACO,OAAO,EAAEd,gBAAiB;QAAAM,QAAA,eACpErD,OAAA;UAAK8D,GAAG,EAAEtE,QAAS;UAACuE,GAAG,EAAC;QAAM;UAAAZ,QAAA,EAAAK,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAP,QAAA,EAAAK,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC;IAAA;MAAAP,QAAA,EAAAK,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAP,QAAA,EAAAK,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV,CAAC;AAAAvD,EAAA,CA/KKF,OAAO;EAAA,QAGIL,SAAS;AAAA;AAAAoE,EAAA,GAHpB/D,OAAO;AAiLb,eAAeA,OAAO;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}