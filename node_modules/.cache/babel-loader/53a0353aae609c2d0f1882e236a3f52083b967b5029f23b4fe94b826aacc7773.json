{"ast":null,"code":"var _jsxFileName = \"D:\\\\IIT Guwahati\\\\cpp\\\\New folder\\\\helloworld\\\\WEB_D\\\\Real_time_chat\\\\real\\\\frontend\\\\src\\\\Components\\\\Chatpane.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Chatbox from './Chatbox';\nimport Message from './Message';\nimport userIcon from '../img/user.png';\nimport moreIcon from '../img/More-icon.png';\n// import { useState } from 'react';\nimport { useContext, useEffect } from 'react';\nimport userContext from '../context/users/userContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatpane = props => {\n  _s();\n  const User = useContext(userContext);\n  // // console.log(User.myContacts) ;\n  // const chatpane = User.myContacts && User.myContacts.filter((contact) => contact.id === User.currentUser.id).map((contact) =>\n  // contact.message.map((message, index) => (\n  //   <div className={message.sender===props.myId?\"outgoing-chats\":\"mychats\"} key={index}>\n  //       <Message name={message.sender===props.myId?\"You\":message.sender} text={message.text} />\n  //     </div>\n  //   ))\n  // );\n\n  // const [chatpane,setchatpane] =useState();\n\n  // Perform any necessary actions when User.currentUser changes\n  // For example, fetch new chat messages\n  // if(!User.currentUser){\n  //   return null;\n  // }\n  // const chatpane=null;\n  // User.myContacts.filter((contact) => contact.id === User.currentUser.id).map((contact) =>\n  // {console.log(contact.message);\n\n  // });\n\n  const handleOnClick = async () => {\n    const newMemberUsername = window.prompt('New Member username?');\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      console.log(\"isgroupchat::\", isGroupChat);\n      if (!isGroupChat) {\n        var response = await axios.get(`http://localhost:5000/api/user/contacts/getName?myId=${props.myId}&senderId=${sender}`);\n      }\n      const pws = await axios.put(\"http://localhost:5000/api/user/message/addMessage\", {\n        myId: props.myId,\n        contactName: `${isGroupChat ? contactName : response.data}`,\n        message: {\n          \"sender\": sender,\n          \"content\": text\n        }\n      }, config);\n      setmessageTyped(\"\");\n      console.log(\"helloworld\");\n      // props.setmyId(username);\n      //   localStorage.setItem(\"userInfo\",JSON.stringify(data));\n    } catch (error) {\n      console.log(error.message);\n    }\n    axios.put(`localhost:5000/api/user/contacts/addMember`);\n  };\n  if (!User.myContacts || !User.currentUser) {\n    return null; // Or return a loading indicator\n  }\n\n  const chatpane = User.myContacts.filter(contact => contact.contactName === User.currentUser.contactName).map(contact => {\n    if (contact.messages !== undefined) {\n      if (contact.messages.length !== 0) {\n        // console.log(\"contact.message:: \",contact.messages);\n        return contact.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: message.sender === props.myId ? \"outgoing-chats\" : \"mychats\",\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            name: message.sender === props.myId ? \"You\" : message.sender,\n            text: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this));\n      }\n    }\n  });\n\n  // const chatpane = User.myContacts\n  //   .filter((contact) => contact.id === User.currentUser.id)\n  //   .map((contact) =>\n  //     contact.messages.map((message, index) => (\n  //       <div className={message.sender === props.myId ? \"outgoing-chats\" : \"mychats\"} key={index}>\n  //         <Message name={message.sender === props.myId ? \"You\" : message.sender} text={message.text} />\n  //       </div>\n  //     ))\n  //   );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-pane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-topbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"userIcon\",\n        src: userIcon,\n        alt: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Group-name\",\n        children: User.currentUser.contactName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topbar-buttons\",\n        onClick: handleOnClick,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addmember\",\n          children: \"Add Member\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"moreIcon\",\n          src: moreIcon,\n          alt: \"More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chats\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: User.myContacts !== undefined && User.currentUser !== undefined ? chatpane : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-bar\",\n      children: /*#__PURE__*/_jsxDEV(Chatbox, {\n        myId: props.myId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 7\n  }, this);\n};\n_s(Chatpane, \"68pAIBoCybEghYpKDyNa7NSmRmA=\");\n_c = Chatpane;\nexport default Chatpane;\nvar _c;\n$RefreshReg$(_c, \"Chatpane\");","map":{"version":3,"names":["React","useState","Chatbox","Message","userIcon","moreIcon","useContext","useEffect","userContext","axios","jsxDEV","_jsxDEV","Chatpane","props","_s","User","handleOnClick","newMemberUsername","window","prompt","config","headers","console","log","isGroupChat","response","get","myId","sender","pws","put","contactName","data","message","text","setmessageTyped","error","myContacts","currentUser","chatpane","filter","contact","map","messages","undefined","length","index","className","children","name","content","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["D:/IIT Guwahati/cpp/New folder/helloworld/WEB_D/Real_time_chat/real/frontend/src/Components/Chatpane.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Chatbox from './Chatbox'\r\nimport Message from './Message'\r\nimport userIcon from '../img/user.png';\r\nimport moreIcon from '../img/More-icon.png'\r\n// import { useState } from 'react';\r\nimport { useContext ,useEffect} from 'react';\r\nimport userContext from '../context/users/userContext';\r\nimport axios from 'axios';\r\nconst Chatpane = (props) => {\r\n  const User =  useContext(userContext);\r\n  // // console.log(User.myContacts) ;\r\n  // const chatpane = User.myContacts && User.myContacts.filter((contact) => contact.id === User.currentUser.id).map((contact) =>\r\n  // contact.message.map((message, index) => (\r\n  //   <div className={message.sender===props.myId?\"outgoing-chats\":\"mychats\"} key={index}>\r\n  //       <Message name={message.sender===props.myId?\"You\":message.sender} text={message.text} />\r\n  //     </div>\r\n  //   ))\r\n  // );\r\n\r\n  // const [chatpane,setchatpane] =useState();\r\n\r\n    // Perform any necessary actions when User.currentUser changes\r\n    // For example, fetch new chat messages\r\n      // if(!User.currentUser){\r\n      //   return null;\r\n      // }\r\n      // const chatpane=null;\r\n      // User.myContacts.filter((contact) => contact.id === User.currentUser.id).map((contact) =>\r\n      // {console.log(contact.message);\r\n        \r\n        \r\n      // });\r\n\r\n      const handleOnClick=async()=>{\r\n       const newMemberUsername = window.prompt('New Member username?');\r\n\r\n       try{\r\n        const config ={\r\n          headers: {\r\n            \"Content-type\":\"application/json\",\r\n          }\r\n        };\r\n        console.log(\"isgroupchat::\",isGroupChat)\r\n      \r\n        if(!isGroupChat){\r\n\r\n          var response =await axios.get(`http://localhost:5000/api/user/contacts/getName?myId=${props.myId}&senderId=${sender}`)\r\n        }\r\n          \r\n        \r\n      \r\n        const pws=await axios.put(\"http://localhost:5000/api/user/message/addMessage\",{myId:props.myId,contactName:`${isGroupChat?contactName:response.data}`,message:{\"sender\":sender,\"content\":text}},config)\r\n        setmessageTyped(\"\");\r\n        console.log(\"helloworld\");\r\n        // props.setmyId(username);\r\n        //   localStorage.setItem(\"userInfo\",JSON.stringify(data));\r\n      }catch(error){\r\n        console.log(error.message);\r\n      }\r\n       axios.put(`localhost:5000/api/user/contacts/addMember`)\r\n      }\r\n\r\n\r\n      if (!User.myContacts || !User.currentUser) {\r\n        return null; // Or return a loading indicator\r\n      }\r\n      const chatpane=User.myContacts.filter((contact) => contact.contactName === User.currentUser.contactName).map((contact) =>\r\n      { if(contact.messages!==undefined){if(contact.messages.length!==0){\r\n      // console.log(\"contact.message:: \",contact.messages);\r\n        return contact.messages.map((message, index) => (\r\n        <div className={message.sender === props.myId ? \"outgoing-chats\" : \"mychats\"} key={index}>\r\n          <Message name={message.sender === props.myId ? \"You\" : message.sender} text={message.content} />\r\n        </div>\r\n      ))}}\r\n    }\r\n    );\r\n  \r\n\r\n\r\n  \r\n  \r\n\r\n  // const chatpane = User.myContacts\r\n  //   .filter((contact) => contact.id === User.currentUser.id)\r\n  //   .map((contact) =>\r\n  //     contact.messages.map((message, index) => (\r\n  //       <div className={message.sender === props.myId ? \"outgoing-chats\" : \"mychats\"} key={index}>\r\n  //         <Message name={message.sender === props.myId ? \"You\" : message.sender} text={message.text} />\r\n  //       </div>\r\n  //     ))\r\n  //   );\r\n        \r\n  return (\r\n\r\n      <div className=\"chat-pane\">\r\n        <div className=\"chat-topbar\">\r\n          <img className=\"userIcon\"src={userIcon} alt=\"User\" />\r\n          <span className=\"Group-name\">{User.currentUser.contactName}</span>\r\n          <div className=\"topbar-buttons\" onClick={handleOnClick}>\r\n            <button className='addmember'>Add Member</button>\r\n            <img className=\"moreIcon\"src={moreIcon} alt=\"More\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"chats\">\r\n          {/* <Message name=\"User\"text=\"lorem njkdj kc kcejdwskdk j n kcxjnekjbjxj edj dbn xjd jdnb dn ndjnj djn kdx kjks jnsk hjsk jnsk js kshj nksnn.\"/> */}\r\n          <div >\r\n\r\n            \r\n              {/* {User.myContacts!==undefined && User.currentUser!==undefined ?chatpane:null} */}\r\n              {User.myContacts!==undefined && User.currentUser!==undefined ?chatpane:null}\r\n{\r\n\r\n              // User.Message.map((message,index)=>\r\n              // {\r\n              //   return(\r\n              //    <div className=\"mychat\" key={index}>\r\n              //     {/* {console.log(message.text)} */}\r\n              //      <Message name ={props.myId} text={message.text} />\r\n              //    </div> );\r\n              // }\r\n              // )\r\n}\r\n            \r\n          </div>\r\n        </div>\r\n        <div className=\"bottom-bar\">\r\n          <Chatbox myId={props.myId} />\r\n        </div>\r\n      </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default Chatpane\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}