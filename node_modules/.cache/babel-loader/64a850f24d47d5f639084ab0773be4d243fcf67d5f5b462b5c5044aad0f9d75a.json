{"ast":null,"code":"var _jsxFileName = \"D:\\\\IIT Guwahati\\\\cpp\\\\New folder\\\\helloworld\\\\WEB_D\\\\Real_time_chat\\\\real\\\\frontend\\\\src\\\\Components\\\\Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport sendIcon from '../img/send.png';\nimport { useContext, useEffect } from 'react';\n// import userContext from '../context/message/userContext';\nimport userContext from \"../context/users/userContext\";\nimport { useSocket } from '../context/SocketProvider';\nimport axios from 'axios';\nimport EmojiInput from 'react-input-emoji';\nimport convertToBase64 from '../helper/convert';\nimport addFileIcon from '../img/addFile-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbox = props => {\n  _s();\n  // const message = useContext(currentMessageContext);\n  const User = useContext(userContext);\n  const socket = useSocket();\n  const [messageTyped, setmessageTyped] = useState(\"\");\n  const [file, setFile] = useState();\n  const [locn, setlocn] = useState();\n  const [pic, setpic] = useState();\n\n  // useEffect(()=>{\n  //   setlocn(convertToBase64(file));\n  // },[file])\n  const selectFile = async e => {\n    const selectedFile = e.target.files[0];\n    setmessageTyped(selectedFile.name);\n    setFile(selectedFile);\n    const base64String = await convertToBase64(selectedFile);\n    setlocn(base64String);\n    return;\n  };\n  // const selectFile =async(e)=>{\n  //   setmessageTyped(e.target.files[0].name);\n  //   setFile(e.target.files[0]);\n  // }\n\n  const handleOnChange = event => {\n    setmessageTyped(event);\n  };\n  const [recipients, setrecipients] = useState([User.currentUser.recipients]);\n  useEffect(() => {\n    setrecipients([User.currentUser.recipients]);\n  }, [User.currentUser.id]);\n  // console.log(User.currentUser.id); // Log the updated value of recipients\n  const myId = props.myId;\n  useEffect(() => {\n    if (socket) {\n      socket.on('receive-message', async _ref => {\n        let {\n          recipients,\n          sender,\n          text,\n          contactName,\n          isGroupChat,\n          type,\n          locn\n        } = _ref;\n        console.log('receive-message', text, sender, recipients, contactName, isGroupChat, type, locn);\n        if (type === 'file') {\n          try {\n            const config = {\n              headers: {\n                \"Content-type\": \"application/json\"\n              }\n            };\n            if (!isGroupChat) {\n              var response = await axios.get(`http://localhost:5000/api/user/contacts/getName?myId=${props.myId}&senderId=${sender}`);\n            }\n\n            // const formData = new FormData();\n            // formData.append('myId', props.myId);\n            // formData.append('contactName', `${isGroupChat?contactName:response.data}`);\n            // formData.append('message_sender',sender);\n            // formData.append('message_content',text);\n            // formData.append('body',file);\n            // await axios.put(\"http://localhost:5000/api/user/message/addFile\",formData,config);\n\n            const pws = await axios.put(\"http://localhost:5000/api/user/message/addMessage\", {\n              myId: props.myId,\n              contactName: `${isGroupChat ? contactName : response.data}`,\n              message: {\n                \"sender\": sender,\n                \"content\": text,\n                \"type\": 'file',\n                locn: locn\n              }\n            }, config).then(() => {\n              setmessageTyped(\"\");\n              setFile();\n            }).catch(err => {\n              console.log(err);\n            });\n          } catch (error) {\n            console.log(error.message);\n          }\n        } else {\n          try {\n            const config = {\n              headers: {\n                \"Content-type\": \"application/json\"\n              }\n            };\n            console.log(\"isgroupchat::\", isGroupChat);\n            if (!isGroupChat) {\n              var response = await axios.get(`http://localhost:5000/api/user/contacts/getName?myId=${props.myId}&senderId=${sender}`);\n            }\n            const pws = await axios.put(\"http://localhost:5000/api/user/message/addMessage\", {\n              myId: props.myId,\n              contactName: `${isGroupChat ? contactName : response.data}`,\n              message: {\n                \"sender\": sender,\n                \"content\": text,\n                \"type\": type,\n                locn: locn\n              }\n            }, config).then(() => {\n              setmessageTyped(\"\");\n            }).catch(err => {\n              console.log(err);\n            });\n            // console.log(\"helloworld\");\n            // props.setmyId(username);\n            //   localStorage.setItem(\"userInfo\",JSON.stringify(data));\n          } catch (error) {\n            console.log(error.message);\n          }\n        }\n        // User.addMessageToContact({'text':text,id:[sender],'sender':sender});\n      });\n\n      return () => {\n        socket.off('receive-message');\n      };\n    }\n  }, [User, socket]);\n  const onSendingMessage = async event => {\n    event.preventDefault();\n    // await User.updateMessage(messageTyped);\n\n    if (file) {\n      // console.log('file',file,108);\n      // console.log('base64',locn,109);\n\n      try {\n        if (file === undefined) {\n          console.log(\"input an image\", 34);\n          return;\n        } else {\n          const data = new FormData();\n          data.append(\"file\", file);\n          data.append(\"upload_preset\", \"chat-app\");\n          data.append(\"cloud_name\", \"dntch5frn\");\n          fetch(\"https://api.cloudinary.com/v1_1/dntch5frn/raw/upload\", {\n            method: \"post\",\n            body: data\n          }).then(res => res.json()).then(data => {\n            setpic(data.url.toString());\n            console.log(data.url.toString());\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n        const messageObject = {\n          recipients,\n          text: messageTyped,\n          contactName: User.currentUser.contactName,\n          isGroupChat: User.currentUser.isGroupChat,\n          type: \"file\",\n          // body:file,\n          mimeType: file.type,\n          fileName: file.name,\n          locn: pic\n        };\n\n        // const config ={\n        //   headers: {\n        //     \"Content-type\":\"multipart/form-data\",\n        //   }\n        // };\n        await socket.emit(\"send-message\", messageObject);\n        // const formData = new FormData();\n        // formData.append('myId', props.myId);\n        // formData.append('contactName', User.currentUser.contactName);\n        // formData.append('message_sender',myId);\n        // formData.append('message_content',messageTyped);\n        // formData.append('body',file);\n        // await axios.put(\"http://localhost:5000/api/user/message/addFile\",formData,config);\n\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        };\n        // await socket.emit(\"send-message\", { recipients, text: messageTyped,contactName:User.currentUser.contactName,isGroupChat:User.currentUser.isGroupChat,type:\"text\",body:\"\"});\n        // await User.addMessageToContact({text:messageTyped,id:recipients,'sender':props.myId});\n        await axios.put(\"http://localhost:5000/api/user/message/addMessage\", {\n          myId: props.myId,\n          contactName: User.currentUser.contactName,\n          message: {\n            \"sender\": myId,\n            \"content\": messageTyped,\n            type: \"file\",\n            locn: pic\n          }\n        }, config).then(() => {\n          setmessageTyped(\"\");\n          setFile();\n          setpic();\n        }).catch(err => {\n          console.log(err);\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n    } else {\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        };\n        await socket.emit(\"send-message\", {\n          recipients,\n          text: messageTyped,\n          contactName: User.currentUser.contactName,\n          isGroupChat: User.currentUser.isGroupChat,\n          type: \"text\",\n          locn: pic\n        });\n        // await User.addMessageToContact({text:messageTyped,id:recipients,'sender':props.myId});\n        await axios.put(\"http://localhost:5000/api/user/message/addMessage\", {\n          myId: props.myId,\n          contactName: User.currentUser.contactName,\n          message: {\n            \"sender\": myId,\n            \"content\": messageTyped,\n            type: \"text\",\n            locn: pic\n          }\n        }, config).then(() => {\n          setmessageTyped(\"\");\n        }).catch(err => {\n          console.log(err);\n        });\n        // console.log(response);\n        // props.setmyId(username);\n        //   localStorage.setItem(\"userInfo\",JSON.stringify(data));\n      } catch (error) {\n        console.log(error.message);\n      }\n      console.log(\"see here chatbox::\", User.currentUser);\n\n      // console.log(\"Hello\"); // Log the updated value of recipients\n      // event.preventDefault();\n    }\n  };\n\n  // useEffect(() => {\n  //   if(User.Message.length>1){\n  //     console.log(User.Message);\n  //   }\n  // }, [User.Message]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: addFileIcon,\n          alt: \"addFile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        onChange: selectFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EmojiInput, {\n        value: messageTyped,\n        onChange: handleOnChange,\n        placeholder: \"Type here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-icon\",\n        onClick: onSendingMessage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: sendIcon,\n          alt: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbox, \"CzX0zkjESsCHbF9Yke5olguG8/w=\", false, function () {\n  return [useSocket];\n});\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","sendIcon","useContext","useEffect","userContext","useSocket","axios","EmojiInput","convertToBase64","addFileIcon","jsxDEV","_jsxDEV","Chatbox","props","_s","User","socket","messageTyped","setmessageTyped","file","setFile","locn","setlocn","pic","setpic","selectFile","e","selectedFile","target","files","name","base64String","handleOnChange","event","recipients","setrecipients","currentUser","id","myId","on","_ref","sender","text","contactName","isGroupChat","type","console","log","config","headers","response","get","pws","put","data","message","then","catch","err","error","off","onSendingMessage","preventDefault","undefined","FormData","append","fetch","method","body","res","json","url","toString","messageObject","mimeType","fileName","emit","children","className","htmlFor","src","alt","_jsxFileName","lineNumber","columnNumber","onChange","value","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/IIT Guwahati/cpp/New folder/helloworld/WEB_D/Real_time_chat/real/frontend/src/Components/Chatbox.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport sendIcon from '../img/send.png';\r\nimport { useContext , useEffect} from 'react';\r\n// import userContext from '../context/message/userContext';\r\nimport userContext from \"../context/users/userContext\";\r\nimport { useSocket } from '../context/SocketProvider';\r\nimport axios from 'axios';\r\nimport  EmojiInput  from 'react-input-emoji';\r\nimport convertToBase64 from '../helper/convert';\r\nimport addFileIcon from '../img/addFile-icon.png'\r\n\r\nconst Chatbox = (props) => {\r\n  // const message = useContext(currentMessageContext);\r\n  const User=useContext(userContext);\r\n  const socket = useSocket();\r\n  const [messageTyped,setmessageTyped]=useState(\"\");\r\n  const [file,setFile] = useState();\r\n  const [locn,setlocn]= useState();\r\n  const [pic,setpic]= useState();\r\n  \r\n\r\n\r\n  // useEffect(()=>{\r\n  //   setlocn(convertToBase64(file));\r\n  // },[file])\r\n  const selectFile = async (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setmessageTyped(selectedFile.name);\r\n    setFile(selectedFile);\r\n  \r\n    const base64String = await convertToBase64(selectedFile);\r\n    setlocn(base64String);\r\n\r\n    \r\n      return;\r\n    \r\n\r\n\r\n  };\r\n  // const selectFile =async(e)=>{\r\n  //   setmessageTyped(e.target.files[0].name);\r\n  //   setFile(e.target.files[0]);\r\n  // }\r\n\r\n  const handleOnChange=(event)=>{\r\n    setmessageTyped(event);\r\n  }\r\n  const [recipients,setrecipients] =useState([User.currentUser.recipients]);\r\n  useEffect(()=>{\r\n    setrecipients([User.currentUser.recipients]);\r\n  },[User.currentUser.id])\r\n  // console.log(User.currentUser.id); // Log the updated value of recipients\r\n  const myId=props.myId;\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('receive-message', async({ recipients, sender, text ,contactName,isGroupChat,type,locn}) => {\r\n        console.log('receive-message',text,sender,recipients,contactName,isGroupChat,type,locn);\r\n        if(type==='file'){\r\n          try{\r\n            const config ={\r\n              headers: {\r\n                \"Content-type\":\"application/json\",\r\n              }\r\n            };\r\n            if(!isGroupChat){\r\n              \r\n              var response =await axios.get(`http://localhost:5000/api/user/contacts/getName?myId=${props.myId}&senderId=${sender}`)\r\n            }\r\n            \r\n            // const formData = new FormData();\r\n            // formData.append('myId', props.myId);\r\n            // formData.append('contactName', `${isGroupChat?contactName:response.data}`);\r\n            // formData.append('message_sender',sender);\r\n            // formData.append('message_content',text);\r\n            // formData.append('body',file);\r\n            // await axios.put(\"http://localhost:5000/api/user/message/addFile\",formData,config);\r\n\r\n            const pws=await axios.put(\"http://localhost:5000/api/user/message/addMessage\",{myId:props.myId,contactName:`${isGroupChat?contactName:response.data}`,message:{\"sender\":sender,\"content\":text,\"type\":'file',locn:locn}},config).then(()=>{\r\n              setmessageTyped(\"\");\r\n              setFile();\r\n    \r\n            }).catch((err)=>{\r\n              console.log(err);\r\n            })\r\n\r\n            \r\n          }catch(error){\r\n            console.log(error.message);\r\n          }\r\n\r\n\r\n        }else{\r\n\r\n          try{\r\n            const config ={\r\n              headers: {\r\n                \"Content-type\":\"application/json\",\r\n              }\r\n            };\r\n            console.log(\"isgroupchat::\",isGroupChat)\r\n            \r\n            if(!isGroupChat){\r\n              \r\n              var response =await axios.get(`http://localhost:5000/api/user/contacts/getName?myId=${props.myId}&senderId=${sender}`)\r\n            }\r\n            \r\n            \r\n            \r\n            const pws=await axios.put(\"http://localhost:5000/api/user/message/addMessage\",{myId:props.myId,contactName:`${isGroupChat?contactName:response.data}`,message:{\"sender\":sender,\"content\":text,\"type\":type,locn:locn}},config).then(()=>{\r\n              setmessageTyped(\"\");\r\n\r\n    \r\n            }).catch((err)=>{\r\n              console.log(err);\r\n            })\r\n            // console.log(\"helloworld\");\r\n            // props.setmyId(username);\r\n            //   localStorage.setItem(\"userInfo\",JSON.stringify(data));\r\n          }catch(error){\r\n            console.log(error.message);\r\n          }\r\n        }\r\n        // User.addMessageToContact({'text':text,id:[sender],'sender':sender});\r\n      });\r\n      \r\n      return () => {\r\n        socket.off('receive-message');\r\n      };\r\n    }\r\n  }, [User,socket]);\r\n  const onSendingMessage = async (event) => {\r\n    event.preventDefault();\r\n    // await User.updateMessage(messageTyped);\r\n    \r\n    if(file){\r\n      // console.log('file',file,108);\r\n      // console.log('base64',locn,109);\r\n      \r\n      \r\n      try{\r\n        \r\n        if (file === undefined) {\r\n          console.log(\"input an image\",34)\r\n          return;\r\n        }else{\r\n          const data = new FormData();\r\n          data.append(\"file\", file);\r\n          data.append(\"upload_preset\", \"chat-app\");\r\n          data.append(\"cloud_name\", \"dntch5frn\");\r\n          fetch(\"https://api.cloudinary.com/v1_1/dntch5frn/raw/upload\", {\r\n            method: \"post\",\r\n            body: data,\r\n          })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setpic(data.url.toString());\r\n            console.log(data.url.toString());\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        } \r\n        const messageObject={ \r\n          recipients, \r\n          text: messageTyped,\r\n          contactName:User.currentUser.contactName,\r\n          isGroupChat:User.currentUser.isGroupChat,\r\n          type:\"file\",\r\n          // body:file,\r\n          mimeType:file.type,\r\n          fileName:file.name,\r\n          locn:pic,\r\n        \r\n        }\r\n\r\n        \r\n        // const config ={\r\n        //   headers: {\r\n        //     \"Content-type\":\"multipart/form-data\",\r\n        //   }\r\n        // };\r\n        await socket.emit(\"send-message\", messageObject);\r\n        // const formData = new FormData();\r\n        // formData.append('myId', props.myId);\r\n        // formData.append('contactName', User.currentUser.contactName);\r\n        // formData.append('message_sender',myId);\r\n        // formData.append('message_content',messageTyped);\r\n        // formData.append('body',file);\r\n        // await axios.put(\"http://localhost:5000/api/user/message/addFile\",formData,config);\r\n\r\n        const config ={\r\n          headers: {\r\n            \"Content-type\":\"application/json\",\r\n          }\r\n        };\r\n        // await socket.emit(\"send-message\", { recipients, text: messageTyped,contactName:User.currentUser.contactName,isGroupChat:User.currentUser.isGroupChat,type:\"text\",body:\"\"});\r\n        // await User.addMessageToContact({text:messageTyped,id:recipients,'sender':props.myId});\r\n        await axios.put(\"http://localhost:5000/api/user/message/addMessage\",{myId:props.myId,contactName:User.currentUser.contactName,message:{\"sender\":myId,\"content\":messageTyped,type:\"file\",locn:pic}},config).then(()=>{\r\n          setmessageTyped(\"\");\r\n          setFile();\r\n          setpic();\r\n\r\n        }).catch((err)=>{\r\n          console.log(err);\r\n        })\r\n\r\n\r\n        \r\n      }catch(error){\r\n        console.log(error.message);\r\n      }\r\n\r\n    }else{\r\n\r\n      try{\r\n        const config ={\r\n          headers: {\r\n            \"Content-type\":\"application/json\",\r\n          }\r\n        };\r\n        await socket.emit(\"send-message\", { recipients, text: messageTyped,contactName:User.currentUser.contactName,isGroupChat:User.currentUser.isGroupChat,type:\"text\",locn:pic});\r\n        // await User.addMessageToContact({text:messageTyped,id:recipients,'sender':props.myId});\r\n        await axios.put(\"http://localhost:5000/api/user/message/addMessage\",{myId:props.myId,contactName:User.currentUser.contactName,message:{\"sender\":myId,\"content\":messageTyped,type:\"text\",locn:pic}},config).then(()=>{\r\n          setmessageTyped(\"\");\r\n\r\n        }).catch((err)=>{\r\n          console.log(err);\r\n        })\r\n        // console.log(response);\r\n        // props.setmyId(username);\r\n        //   localStorage.setItem(\"userInfo\",JSON.stringify(data));\r\n      }catch(error){\r\n        console.log(error.message);\r\n      }\r\n      console.log(\"see here chatbox::\",User.currentUser)\r\n      \r\n      // console.log(\"Hello\"); // Log the updated value of recipients\r\n      // event.preventDefault();\r\n    }\r\n      \r\n    };\r\n    \r\n    \r\n    // useEffect(() => {\r\n      //   if(User.Message.length>1){\r\n  //     console.log(User.Message);\r\n  //   }\r\n  // }, [User.Message]);\r\n  return (\r\n    <div>\r\n      \r\n        <form className=\"chatbox\" >\r\n          {/* <input type=\"text\" placeholder='Type here' value={messageTyped} onChange={handleOnChange}/> */}\r\n          <label htmlFor=\"file\"><img src={addFileIcon} alt='addFile'/></label>\r\n          <input type=\"file\" id=\"file\" onChange={selectFile} />\r\n          <EmojiInput\r\n          value={messageTyped}\r\n          onChange={handleOnChange}\r\n          placeholder=\"Type here\"\r\n        />\r\n          <button type='submit' className=\"send-icon\" onClick={onSendingMessage}>\r\n            <img src={sendIcon} alt=\"Send\" />\r\n          </button>\r\n        </form>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}