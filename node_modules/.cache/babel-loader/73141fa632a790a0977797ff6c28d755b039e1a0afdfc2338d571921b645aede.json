{"ast":null,"code":"import _regeneratorRuntime from\"D:/IIT Guwahati/cpp/New folder/helloworld/WEB_D/render_netlify_deployment_realChat/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/IIT Guwahati/cpp/New folder/helloworld/WEB_D/render_netlify_deployment_realChat/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React,{useContext,useEffect,useState}from'react';import Contacts from'./Contacts';import Addgroup from'./Addgroup';import userContext from'../context/users/userContext';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Leftpane=function Leftpane(props){var User=useContext(userContext);useEffect(function(){var fetchContactList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,myContactList,mappedContacts;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"https://realchatbackend-l5am.onrender.com/api/user/contacts/accesscontacts?myId=\".concat(props.myId));case 3:response=_context.sent;myContactList=response.data;// Assuming contact list is directly returned in response.data\n// console.log(\"hello\");\nmappedContacts=myContactList.map(function(contact){return{contactName:contact.contactName,recipients:contact.recipients,messages:contact.messages,isGroupChat:contact.isGroupChat};});_context.next=8;return User.updatemyContacts(mappedContacts);case 8:_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.log(_context.t0.message);case 13:case\"end\":return _context.stop();}},_callee,null,[[0,10]]);}));return function fetchContactList(){return _ref.apply(this,arguments);};}();fetchContactList();},[props.myId,User]);if(User.myContacts===undefined){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:\"leftpane\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"head_con\",children:/*#__PURE__*/_jsx(\"h4\",{children:\"Contacts\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"contact-list\",children:User.myContacts.map(function(contact){return/*#__PURE__*/_jsx(Contacts,{contactName:contact.contactName,recipients:contact.recipients,isGroupChat:contact.isGroupChat},contact.contactName)//thoda check kar lena [0]\n;})}),/*#__PURE__*/_jsx(Addgroup,{myId:props.myId})]});};export default Leftpane;","map":{"version":3,"names":["React","useContext","useEffect","useState","Contacts","Addgroup","userContext","axios","jsx","_jsx","jsxs","_jsxs","Leftpane","props","User","fetchContactList","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","myContactList","mappedContacts","wrap","_callee$","_context","prev","next","get","concat","myId","sent","data","map","contact","contactName","recipients","messages","isGroupChat","updatemyContacts","t0","console","log","message","stop","apply","arguments","myContacts","undefined","className","children"],"sources":["D:/IIT Guwahati/cpp/New folder/helloworld/WEB_D/render_netlify_deployment_realChat/frontend/src/Components/Leftpane.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport Contacts from './Contacts'\r\nimport Addgroup from './Addgroup'\r\nimport userContext from '../context/users/userContext'\r\nimport axios from 'axios'\r\nconst Leftpane = (props) => {\r\n  \r\n  const User = useContext(userContext);\r\n\r\n  useEffect(() => {\r\n    const fetchContactList = async () => {\r\n      try {\r\n        const response = await axios.get(`https://realchatbackend-l5am.onrender.com/api/user/contacts/accesscontacts?myId=${props.myId}`);\r\n        const myContactList = response.data; // Assuming contact list is directly returned in response.data\r\n        // console.log(\"hello\");\r\n        const mappedContacts = myContactList.map((contact) => {\r\n          return {\r\n            contactName: contact.contactName,\r\n            recipients: contact.recipients,\r\n            messages: contact.messages,\r\n            isGroupChat:contact.isGroupChat\r\n          };\r\n        });\r\n        await User.updatemyContacts(mappedContacts);\r\n        // console.log(\"User.mycontacts\",User.myContacts);\r\n        // Update User context or state with the contact list\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n    \r\n    fetchContactList();\r\n  }, [props.myId,User]);\r\n  if(User.myContacts===undefined){\r\n    return null;\r\n  }\r\n  return (\r\n  \r\n      <div className=\"leftpane\">\r\n        <div className=\"head_con\">\r\n        <h4>Contacts</h4>\r\n        </div>\r\n        <div className=\"contact-list\">\r\n          {User.myContacts.map((contact)=>{\r\n            return(\r\n              <Contacts contactName={contact.contactName} recipients={contact.recipients} isGroupChat={contact.isGroupChat} key={contact.contactName}/> //thoda check kar lena [0]\r\n            )\r\n          })}\r\n        </div>\r\n\r\n        <Addgroup myId={props.myId}/>\r\n\r\n      </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default Leftpane\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}