{"ast":null,"code":"var _jsxFileName = \"D:\\\\IIT Guwahati\\\\cpp\\\\New folder\\\\helloworld\\\\WEB_D\\\\Real_time_chat\\\\real\\\\frontend\\\\src\\\\Components\\\\Leftpane.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport Contacts from './Contacts';\nimport Addgroup from './Addgroup';\nimport userContext from '../context/users/userContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leftpane = props => {\n  _s();\n  const User = useContext(userContext);\n  const [activeContact, setactiveContact] = useState();\n  const handleOnClick = async name => {\n    setactiveContact(name);\n  };\n  useEffect(() => {\n    const fetchContactList = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/user/contacts/accesscontacts?myId=${props.myId}`);\n        const myContactList = response.data; // Assuming contact list is directly returned in response.data\n        // console.log(\"hello\");\n        const mappedContacts = myContactList.map(contact => {\n          return {\n            contactName: contact.contactName,\n            recipients: contact.recipients,\n            messages: contact.messages,\n            isGroupChat: contact.isGroupChat\n          };\n        });\n        await User.updatemyContacts(mappedContacts);\n        // console.log(\"User.mycontacts\",User.myContacts);\n        // Update User context or state with the contact list\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchContactList();\n  }, [props.myId, User]);\n  if (User.myContacts === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leftpane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"head_con\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-list\",\n      children: User.myContacts.map(contact => {\n        return /*#__PURE__*/_jsxDEV(Contacts, {\n          isActive: activeContact === contact.contactName ? \"active-contact\" : \"\",\n          onClick: () => handleOnClick(contact.contactName),\n          contactName: contact.contactName,\n          recipients: contact.recipients,\n          isGroupChat: contact.isGroupChat\n        }, contact.contactName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this) //thoda check kar lena [0]\n        ;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Addgroup, {\n      myId: props.myId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n_s(Leftpane, \"+VjRxWuzhD25EQyep5+cbFQlNFI=\");\n_c = Leftpane;\nexport default Leftpane;\nvar _c;\n$RefreshReg$(_c, \"Leftpane\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Contacts","Addgroup","userContext","axios","jsxDEV","_jsxDEV","Leftpane","props","_s","User","activeContact","setactiveContact","handleOnClick","name","fetchContactList","response","get","myId","myContactList","data","mappedContacts","map","contact","contactName","recipients","messages","isGroupChat","updatemyContacts","error","console","log","message","myContacts","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isActive","onClick","_c","$RefreshReg$"],"sources":["D:/IIT Guwahati/cpp/New folder/helloworld/WEB_D/Real_time_chat/real/frontend/src/Components/Leftpane.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport Contacts from './Contacts'\r\nimport Addgroup from './Addgroup'\r\nimport userContext from '../context/users/userContext'\r\nimport axios from 'axios'\r\nconst Leftpane = (props) => {\r\n  \r\n  const User = useContext(userContext);\r\n  const [activeContact,setactiveContact] =useState();\r\n  const handleOnClick=async(name)=>{\r\n    setactiveContact(name)\r\n  }\r\n  useEffect(() => {\r\n    const fetchContactList = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/user/contacts/accesscontacts?myId=${props.myId}`);\r\n        const myContactList = response.data; // Assuming contact list is directly returned in response.data\r\n        // console.log(\"hello\");\r\n        const mappedContacts = myContactList.map((contact) => {\r\n          return {\r\n            contactName: contact.contactName,\r\n            recipients: contact.recipients,\r\n            messages: contact.messages,\r\n            isGroupChat:contact.isGroupChat\r\n          };\r\n        });\r\n        await User.updatemyContacts(mappedContacts);\r\n        // console.log(\"User.mycontacts\",User.myContacts);\r\n        // Update User context or state with the contact list\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n    \r\n    fetchContactList();\r\n  }, [props.myId,User]);\r\n  if(User.myContacts===undefined){\r\n    return null;\r\n  }\r\n  return (\r\n  \r\n      <div className=\"leftpane\">\r\n        <div className=\"head_con\">\r\n        <h4>Contacts</h4>\r\n        </div>\r\n        <div className=\"contact-list\">\r\n          {User.myContacts.map((contact)=>{\r\n            return(\r\n              <Contacts isActive={activeContact===contact.contactName?\"active-contact\":\"\"} onClick = {() => handleOnClick(contact.contactName)} contactName={contact.contactName} recipients={contact.recipients} isGroupChat={contact.isGroupChat} key={contact.contactName}/> //thoda check kar lena [0]\r\n            )\r\n          })}\r\n        </div>\r\n\r\n        <Addgroup myId={props.myId}/>\r\n\r\n      </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default Leftpane\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}