{"ast":null,"code":"var _jsxFileName = \"D:\\\\IIT Guwahati\\\\cpp\\\\New folder\\\\helloworld\\\\WEB_D\\\\Real_time_chat\\\\frontend\\\\src\\\\Components\\\\Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport sendIcon from '../img/send.png';\nimport { useContext, useEffect } from 'react';\n// import userContext from '../context/message/userContext';\nimport userContext from \"../context/users/userContext\";\nimport { useSocket } from '../context/SocketProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbox = props => {\n  _s();\n  // const message = useContext(currentMessageContext);\n  const User = useContext(userContext);\n  const socket = useSocket();\n  const [messageTyped, setmessageTyped] = useState(\"\");\n  const handleOnChange = event => {\n    setmessageTyped(event.target.value);\n  };\n  const [recipients, setrecipients] = useState([User.currentUser.id]);\n  useEffect(() => {\n    setrecipients([User.currentUser.id]);\n  }, [User.currentUser.id]);\n  // console.log(User.currentUser.id); // Log the updated value of recipients\n  // console.log(recipients); // Log the updated value of recipients\n\n  useEffect(() => {\n    if (socket) {\n      socket.on('receive-message', _ref => {\n        let {\n          recipients,\n          sender,\n          text\n        } = _ref;\n        User.addMessageToContact({\n          text,\n          propsmyId\n        });\n      });\n      return () => {\n        socket.off('receive-message');\n      };\n    }\n  }, [socket]);\n  const onSendingMessage = async event => {\n    // await User.updateMessage(messageTyped);\n    await User.addMessageToContact({\n      messageTyped,\n      recipients\n    });\n    await socket.emit(\"send-message\", {\n      recipients,\n      text: messageTyped\n    });\n    setmessageTyped(\"\");\n    event.preventDefault();\n  };\n  useEffect(() => {\n    if (User.Message.length > 1) {\n      console.log(User.Message);\n    }\n  }, [User.Message]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type here\",\n        value: messageTyped,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-icon\",\n        onClick: onSendingMessage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: sendIcon,\n          alt: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbox, \"Tr+HLbNnpAehxwC8BKzwuB7+9L0=\", false, function () {\n  return [useSocket];\n});\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","sendIcon","useContext","useEffect","userContext","useSocket","jsxDEV","_jsxDEV","Chatbox","props","_s","User","socket","messageTyped","setmessageTyped","handleOnChange","event","target","value","recipients","setrecipients","currentUser","id","on","_ref","sender","text","addMessageToContact","propsmyId","off","onSendingMessage","emit","preventDefault","Message","length","console","log","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["D:/IIT Guwahati/cpp/New folder/helloworld/WEB_D/Real_time_chat/frontend/src/Components/Chatbox.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport sendIcon from '../img/send.png';\r\nimport { useContext , useEffect} from 'react';\r\n// import userContext from '../context/message/userContext';\r\nimport userContext from \"../context/users/userContext\";\r\nimport { useSocket } from '../context/SocketProvider';\r\nconst Chatbox = (props) => {\r\n  // const message = useContext(currentMessageContext);\r\n  const User=useContext(userContext);\r\n  const socket = useSocket();\r\n  const [messageTyped,setmessageTyped]=useState(\"\");\r\n  \r\n  const handleOnChange=(event)=>{\r\n    setmessageTyped(event.target.value);\r\n  }\r\n  const [recipients,setrecipients] =useState([User.currentUser.id]);\r\n  useEffect(()=>{\r\n    setrecipients([User.currentUser.id]);\r\n  },[User.currentUser.id])\r\n  // console.log(User.currentUser.id); // Log the updated value of recipients\r\n  // console.log(recipients); // Log the updated value of recipients\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('receive-message', ({ recipients, sender, text }) => {\r\n        User.addMessageToContact({text,propsmyId});\r\n      });\r\n\r\n      return () => {\r\n        socket.off('receive-message');\r\n      };\r\n    }\r\n  }, [socket]);\r\n  const onSendingMessage = async (event) => {\r\n    // await User.updateMessage(messageTyped);\r\n    await User.addMessageToContact({messageTyped,recipients});\r\n    await socket.emit(\"send-message\", { recipients, text: messageTyped });\r\n  \r\n    setmessageTyped(\"\");\r\n    event.preventDefault();\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if(User.Message.length>1){\r\n      console.log(User.Message);\r\n    }\r\n  }, [User.Message]);\r\n  return (\r\n    <div>\r\n      \r\n        <form className=\"chatbox\" >\r\n          <input type=\"text\" placeholder='Type here' value={messageTyped} onChange={handleOnChange}/>\r\n          <button type='submit' className=\"send-icon\" onClick={onSendingMessage}>\r\n            <img src={sendIcon} alt=\"Send\" />\r\n          </button>\r\n        </form>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}