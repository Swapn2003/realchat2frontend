{"ast":null,"code":"var _jsxFileName = \"D:\\\\IIT Guwahati\\\\cpp\\\\New folder\\\\helloworld\\\\WEB_D\\\\Real_time_chat\\\\frontend\\\\src\\\\Components\\\\Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport sendIcon from '../img/send.png';\nimport { useContext, useEffect } from 'react';\n// import userContext from '../context/message/userContext';\nimport userContext from \"../context/users/userContext\";\nimport { useSocket } from '../context/SocketProvider';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbox = props => {\n  _s();\n  // const message = useContext(currentMessageContext);\n  const User = useContext(userContext);\n  const socket = useSocket();\n  const [messageTyped, setmessageTyped] = useState(\"\");\n  const handleOnChange = event => {\n    setmessageTyped(event.target.value);\n  };\n  const [recipients, setrecipients] = useState([User.currentUser.recipients]);\n  useEffect(() => {\n    setrecipients([User.currentUser.recipients]);\n  }, [User.currentUser.id]);\n  // console.log(User.currentUser.id); // Log the updated value of recipients\n  const myId = props.myId;\n  useEffect(() => {\n    if (socket) {\n      socket.on('receive-message', _ref => {\n        let {\n          recipients,\n          sender,\n          text\n        } = _ref;\n        console.log(text, sender);\n        User.addMessageToContact({\n          'text': text,\n          id: [sender],\n          'sender': sender\n        });\n      });\n      return () => {\n        socket.off('receive-message');\n      };\n    }\n  }, [User, socket]);\n  const onSendingMessage = async event => {\n    event.preventDefault();\n    // await User.updateMessage(messageTyped);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      await socket.emit(\"send-message\", {\n        recipients,\n        text: messageTyped\n      });\n      await axios.put(\"http://localhost:5000/api/user/message/addMessage\", {\n        myId: props.myId,\n        contactName: User.currentUser.contactName,\n        message: {\n          \"sender\": myId,\n          \"content\": messageTyped\n        }\n      }, config).then(response => {\n        console.log(\"see here chatbox::\", User.currentUser);\n        setmessageTyped(\"\");\n        // console.log(response);\n        // props.setmyId(username);\n        // localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      }).catch(error => {\n        console.log(error.message);\n      });\n      // setmessageTyped(\"\");\n      // console.log(response);\n      // props.setmyId(username);\n      //   localStorage.setItem(\"userInfo\",JSON.stringify(data));\n    } catch (error) {\n      console.log(error.message);\n    }\n    // console.log(\"see here chatbox::\",User.currentUser)\n\n    // await User.addMessageToContact({text:messageTyped,id:recipients,'sender':props.myId});\n    // console.log(\"Hello\"); // Log the updated value of recipients\n    // event.preventDefault();\n  };\n\n  // useEffect(() => {\n  //   if(User.Message.length>1){\n  //     console.log(User.Message);\n  //   }\n  // }, [User.Message]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type here\",\n        value: messageTyped,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-icon\",\n        onClick: onSendingMessage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: sendIcon,\n          alt: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbox, \"37MMabhuZ1A1znjrHAvGyCYAOqQ=\", false, function () {\n  return [useSocket];\n});\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","sendIcon","useContext","useEffect","userContext","useSocket","axios","jsxDEV","_jsxDEV","Chatbox","props","_s","User","socket","messageTyped","setmessageTyped","handleOnChange","event","target","value","recipients","setrecipients","currentUser","id","myId","on","_ref","sender","text","console","log","addMessageToContact","off","onSendingMessage","preventDefault","config","headers","emit","put","contactName","message","then","response","catch","error","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["D:/IIT Guwahati/cpp/New folder/helloworld/WEB_D/Real_time_chat/frontend/src/Components/Chatbox.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport sendIcon from '../img/send.png';\r\nimport { useContext , useEffect} from 'react';\r\n// import userContext from '../context/message/userContext';\r\nimport userContext from \"../context/users/userContext\";\r\nimport { useSocket } from '../context/SocketProvider';\r\nimport axios from 'axios';\r\nconst Chatbox = (props) => {\r\n  // const message = useContext(currentMessageContext);\r\n  const User=useContext(userContext);\r\n  const socket = useSocket();\r\n  const [messageTyped,setmessageTyped]=useState(\"\");\r\n  \r\n  const handleOnChange=(event)=>{\r\n    setmessageTyped(event.target.value);\r\n  }\r\n  const [recipients,setrecipients] =useState([User.currentUser.recipients]);\r\n  useEffect(()=>{\r\n    setrecipients([User.currentUser.recipients]);\r\n  },[User.currentUser.id])\r\n  // console.log(User.currentUser.id); // Log the updated value of recipients\r\n  const myId=props.myId;\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('receive-message', ({ recipients, sender, text }) => {\r\n        console.log(text,sender);\r\n        User.addMessageToContact({'text':text,id:[sender],'sender':sender});\r\n      });\r\n      \r\n      return () => {\r\n        socket.off('receive-message');\r\n      };\r\n    }\r\n  }, [User,socket]);\r\n  const onSendingMessage = async (event) => {\r\n    event.preventDefault();\r\n    // await User.updateMessage(messageTyped);\r\n    try{\r\n      const config ={\r\n        headers: {\r\n          \"Content-type\":\"application/json\",\r\n        }\r\n      };\r\n      await socket.emit(\"send-message\", { recipients, text: messageTyped });\r\n      await axios.put(\"http://localhost:5000/api/user/message/addMessage\",{myId:props.myId,contactName:User.currentUser.contactName,message:{\"sender\":myId,\"content\":messageTyped}},config).then((response) => {\r\n        console.log(\"see here chatbox::\", User.currentUser);\r\n        setmessageTyped(\"\");\r\n        // console.log(response);\r\n        // props.setmyId(username);\r\n        // localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n      // setmessageTyped(\"\");\r\n      // console.log(response);\r\n      // props.setmyId(username);\r\n      //   localStorage.setItem(\"userInfo\",JSON.stringify(data));\r\n    }catch(error){\r\n      console.log(error.message);\r\n    }\r\n    // console.log(\"see here chatbox::\",User.currentUser)\r\n    \r\n    // await User.addMessageToContact({text:messageTyped,id:recipients,'sender':props.myId});\r\n    // console.log(\"Hello\"); // Log the updated value of recipients\r\n    // event.preventDefault();\r\n  \r\n  };\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if(User.Message.length>1){\r\n  //     console.log(User.Message);\r\n  //   }\r\n  // }, [User.Message]);\r\n  return (\r\n    <div>\r\n      \r\n        <form className=\"chatbox\" >\r\n          <input type=\"text\" placeholder='Type here' value={messageTyped} onChange={handleOnChange}/>\r\n          <button type='submit' className=\"send-icon\" onClick={onSendingMessage}>\r\n            <img src={sendIcon} alt=\"Send\" />\r\n          </button>\r\n        </form>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}